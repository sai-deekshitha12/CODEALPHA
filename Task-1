/*Here's a simple implementation of a Factorial program using*/
def fibonacci(n):
    fib_sequence = [0, 1]
    while len(fib_sequence) < n:
        fib_sequence.append(fib_sequence[-1] + fib_sequence[-2])NAME : N.SAI DEEKSHITHA
COMPANY : CODE ALPHA
STUDENT ID : CA/FM3/2182
DOMAIN : PYTHON PROGRAMMING LANGUAGE
DURATION : 25th February 2025 to 25th May 2025
OVERVIEW OF PROJECT :
PROJECT : The Fibonacci series is a sequence where each number is the sum of the two preceding numbers defined by a mathematical reccurance relationship.
OBJECTIVE : The Fibonacci sequence is a series of numbers in which each number is the sum of the two preceding numbers, usually starting with 0 and 1. This sequence is defined by the mathematical recurrence relationship
F(n) = F(n-1) + F(n-2)
where F(n) is the nth Fibonacci number.
The sequence begins like this:
0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, and so on.
KEY FEATURES :
Here are some key features of the Fibonacci sequence:
1. Recurrence relationship: Each number is the sum of the two preceding numbers.
2. Starting values: The sequence usually starts with 0 and 1.
3. Infinite sequence: The Fibonacci sequence is an infinite series of numbers.
4. Non-repeating pattern: The sequence exhibits a non-repeating pattern, with each number being unique.
TECHNICALOGIES USED : 1. Python Programming Language: Used for writing the code to generate the Fibonacci sequence.
2. Mathematical Recurrence Relationship: Used to define the Fibonacci sequence.
3. Algorithm: A step-by-step procedure is used to generate the Fibonacci sequence.
4. Data Structures: Lists or arrays are used to store the generated Fibonacci sequence.
Properties :
- Each number in the sequence is the sum of the two preceding numbers.
- The sequence is infinite.
- The ratio of any two adjacent numbers in the sequence approaches the golden ratio (approximately 1.618).
Applications :
- Mathematics: number theory, algebra, geometry
- Science: biology, physics, engineering
- Finance: modeling population growth, predicting stock prices
- Computer Science: algorithms, data structures, programming

###code##
    return fib_sequence

def main():
    while True:
        try:
            n = int(input("Enter the value of n: "))
            if n <= 0:
                print("Please enter a positive integer.")
            else:
                break
        except ValueError:
            print("Invalid input. Please enter an integer.")

    fib_sequence = fibonacci(n)
    print("Fibonacci sequence up to {} terms:".format(n))
    print(", ".join(map(str, fib_sequence)))

if __name__ == "__main__":
    main()
